version: 2
jobs:
  build-test:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/AutoIntern-Django
    steps:
      - checkout

      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - "venv"
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Set Up GOOGLE_CLOUD_DEFAULT_CREDENTIALS
          command: |
            echo $DEV_SECRET | base64 -di > /tmp/dev_secret.json

      - run:
          name: run tests
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/dev_secret.json"
            . venv/bin/activate
            ./cloud_sql_proxy_linux -instances="$DEV_DATABASE"=tcp:5432 &
            python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deployDev:
    machine:
      enabled: true
    working_directory: ~/AutoIntern-Django
    steps:
      - checkout

      - run:
          name: Set Up GOOGLE_CLOUD_DEFAULT_CREDENTIALS
          command: |
            echo $DEV_SECRET | base64 -di > /tmp/dev_secret.json

      - run:
          name: Deploy To Dev Server
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/dev_secret.json"
            export ENVIRONMENT="DEV"
            gcloud --quiet components update app
            gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
            gcloud config set project $DEV_ID
            gcloud -q app deploy dev_app.yaml --promote --version=1

  deployProd:
    machine:
      enabled: true
    working_directory: ~/AutoIntern-Django
    steps:
      - checkout

      - run:
          name: Set Up GOOGLE_CLOUD_DEFAULT_CREDENTIALS
          command: |
            echo $PROD_SECRET | base64 -di > /tmp/prod_secret.json

      - run:
          name: Deploy To Prod Server
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/prod_secret.json"
            export ENVIRONMENT="PROD"
            gcloud --quiet components update app
            gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
            gcloud config set project $PROD_ID
            gcloud -q app deploy prod_app.yaml --promote --version=1

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-test

      - deployDev:
          filters:
            branches:
              only:
                - dev
          requires:
            - build-test

      - holdDeployProd:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build-test

      - deployProd:
          requires:
            - holdDeployProd


# This is for when we need to deploy with static files, do not touch please
 #export GOOGLE_APPLICATION_CREDENTIALS="/tmp/client_secret.json"
 #export PYTHONPATH="${HOME}/appengine"
 #export PYTHONPATH=${PYTHONPATH}:${HOME}/google-cloud-sdk
 #. venv/bin/activate
 #rm -rf ./static
 #python manage.py collectstatic
 #${HOME}/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file "/tmp/client_secret.json"
 #${HOME}/google-cloud-sdk/bin/gcloud --quiet components update app
 #${HOME}/google-cloud-sdk/bin/gsutil rsync -R static/ gs://autointern/static
 #${HOME}/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT_ID
 #${HOME}/google-cloud-sdk/bin/gcloud app -q deploy
